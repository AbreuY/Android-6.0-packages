/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.wx.hallview.views.utils;

import android.net.Uri;
import android.graphics.BitmapFactory;
import android.graphics.Bitmap;
import android.content.Context;
import java.io.FileNotFoundException;
import java.io.IOException;
import android.util.Log;
import android.os.ParcelFileDescriptor;
import android.content.ContentResolver;
import java.io.FileDescriptor;
import android.content.ContentUris;
import android.content.res.Resources;
import java.io.InputStream;
import android.graphics.Rect;
import com.wx.hallview.R;

public class MusicUtil {
    private static final Uri sArtworkUri;
    private static final BitmapFactory.Options sBitmapOptions;
    
    static {
        sArtworkUri = Uri.parse("content://media/external/audio/albumart");
        sBitmapOptions = new BitmapFactory.Options();
        sBitmapOptions.inPreferredConfig = Bitmap.Config.ARGB_8888;
        sBitmapOptions.inDither = false;
    }
    
    public static Bitmap getDefaultArtwork(Context context) {
        BitmapFactory.Options opts = new BitmapFactory.Options();
        opts.inPreferredConfig = Bitmap.Config.ARGB_8888;
        return BitmapFactory.decodeStream(context.getResources().openRawResource(R.drawable.default_music), null, opts);
    }
    
    public static Bitmap getArtwork(Context context, long song_id, long album_id, boolean allowdefault) {
        // :( Parsing error. Please contact me.
        if((album_id < 0) && (song_id < 0)){
			return getDefaultArtwork(context);
		} else {
			return getArtworkFromFile(context,song_id,album_id);
		}
    }
    
    private static Bitmap getArtworkFromFile(Context context, long songid, long albumid) {
        Log.d("MusicUtil", ">> getArtworkFromFile, songid=" + songid + ", albumid=" + albumid);
        Bitmap bm = null;
        byte[] art = null;
        String path = null;
        if((albumid < 0) && (songid < 0)) {
            throw new IllegalArgumentException("Must specify an album or a song id");
        }
        ParcelFileDescriptor pfd = null;
        try {
            try {
                if(albumid > 0) {
                    Uri uri = Uri.parse("content://media/external/audio/media/" + songid + "/albumart");
                    pfd = context.getContentResolver().openFileDescriptor(uri, "r");
                    Log.d("MusicUtil", "getArtworkFromFile: pFD=" + pfd);
                    if(pfd != null) {
                        FileDescriptor fd = pfd.getFileDescriptor();
                        if(fd != null) {
                            bm = BitmapFactory.decodeFileDescriptor(fd);
                        } else {
                            Log.e("MusicUtil", "getArtworkFromFile: fd is null");
                        }
                    } else {
                        uri = ContentUris.withAppendedId(sArtworkUri, albumid);
                        pfd = context.getContentResolver().openFileDescriptor(uri, "r");
                        Log.d("MusicUtil", "getArtworkFromFile: pFD=" + pfd);
                        if(pfd != null) {
                            FileDescriptor fd = pfd.getFileDescriptor();
                            if(fd != null) {
                                bm = BitmapFactory.decodeFileDescriptor(fd);
                            } else {
                                Log.e("MusicUtil", "getArtworkFromFile: fd is null");
                            }
                        }
                    }
                }
            } catch(IllegalStateException localIllegalStateException1) {
            }
        } catch(FileNotFoundException ex) {
            Log.e("MusicUtil", "getArtworkFromFile: FileNotFoundException!");
        } finally {
            if(pfd != null) {
                try {
                    pfd.close();
                } catch(IOException e) {
                    Log.e("MusicUtil", "fd.close: IOException!");
                }
            }
        }
        Log.d("MusicUtil", "<< getArtworkFromFile: " + bm);
        return bm;
    }
}
