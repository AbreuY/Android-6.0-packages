/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.wx.hallview.views.utils;

import com.wx.hallview.bean.WeatherInfo;
import org.json.JSONException;
import java.text.ParseException;
import org.json.JSONObject;
import java.text.SimpleDateFormat;
import java.util.Locale;
import org.json.JSONArray;
import java.util.Date;
import java.net.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.io.IOException;
import java.net.MalformedURLException;
import android.util.Log;



public class HttpUtil {
    
    public static String getJsonByUrl(String getJsonUrl){
    	HttpURLConnection conn = null;
    	StringBuilder sb = new StringBuilder();
    	try{
	    	URL url = new URL(getJsonUrl);
	        conn = (HttpURLConnection) url.openConnection();
	        conn.setReadTimeout(3000 /* milliseconds */);
	        conn.setConnectTimeout(3000 /* milliseconds */);
	        conn.setRequestMethod("GET");
	        //conn.setDoInput(true);
	        // Starts the query
	        //conn.connect();
        
	        BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
	        String line = null;
	        while ((line = reader.readLine()) != null) {
	        	sb.append(line);
	        }
	        reader.close();
	        
		}
		catch (UnsupportedEncodingException e) {
	        // TODO Auto-generated catch block
	        e.printStackTrace();
        }
        catch (MalformedURLException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
        }  
		catch (IOException e) {
				e.printStackTrace();
		} finally {
		   if (conn != null) {
		   	    
                conn.disconnect();
           }	    
		}
		
    	return sb.toString();
    }
    
    public static WeatherInfo getWeatherInfoByJson(String getWeatherInfoJson, String countyName) {
        WeatherInfo info = new WeatherInfo();;
        String dateString;
        String weatherText = null;
        
        SimpleDateFormat pFormat = new SimpleDateFormat("E, dd MMM yyyy hh:mm a", Locale.US);
        SimpleDateFormat fdFormat = new SimpleDateFormat("dd MMM yyyy", Locale.US);
        SimpleDateFormat fFormat = new SimpleDateFormat("HH", Locale.US);
        SimpleDateFormat dFormat = new SimpleDateFormat("dd", Locale.US);
        
        try {
            JSONObject object = new JSONObject(getWeatherInfoJson);
            object = object.getJSONObject("query");
            object = object.getJSONObject("results");
            object = object.getJSONObject("channel");
            object = object.getJSONObject("item");
            JSONArray forecastArray = object.getJSONArray("forecast");
            object = object.getJSONObject("condition");
            dateString = object.getString("date");
            String fTemp = object.getString("temp");
            info.setCountyName(countyName);
            dateString = dateString.substring(0, dateString.lastIndexOf(" "));
            info.setDate(dateString);
            int cTemp = (int)((double)(Integer.parseInt(fTemp) - 0x20) / 1.8);
            info.setTemp( cTemp + "\u2103");
            Date date = pFormat.parse(dateString);
            String day = dFormat.format(date);
            String hour = fFormat.format(date);
            
            Date forecastDate;
            String forecastDay;
            String forecastDayString;
            
            JSONObject forecastObject;
            
            for(int i=0; i < forecastArray.length(); i++){
                forecastObject = forecastArray.getJSONObject(i);
                forecastDayString = forecastObject.getString("date");
                forecastDate = fdFormat.parse(forecastDayString);
                forecastDay = dFormat.format(forecastDate);
                if(Integer.parseInt(forecastDay) == Integer.parseInt(day)) {
                    weatherText = forecastObject.getString("text");
                    break;
                }
            }
            if(weatherText != null){
	            weatherText = weatherText.toLowerCase(Locale.US);
	            weatherText = weatherText.replace(" ", "-");
            }
            if((Integer.parseInt(hour) > 0x13) || (Integer.parseInt(hour) < 0x7)) {
                weatherText = Integer.parseInt(hour) + weatherText + "-night";
            }
            info.setText(weatherText);
        } catch(JSONException e) {
            e.printStackTrace();
        } catch(ParseException e) {
            e.printStackTrace();
        }
        
        return info;
    }
}
